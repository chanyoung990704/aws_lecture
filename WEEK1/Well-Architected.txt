Well-Architected
	보안, 성능, 비용, 안정성
	목적
		정보에 근거한 의사결정
		클라우드 네이티브 방식으로 생각
		잠재적 영향 파악	
	프레임워크
		워크로드 아키텍처를 평가하는 일관된 접근 방식 제공
		워크로드 : 비즈니스 또는 운영 가치를 제공하는 AWS에서 실행되는 상호 관련된 애플리케이션, 인프라, 정책, 거버넌스 및 운영의 모음
		질문 / 원칙 / 설계 원칙
	일반적 설계 원칙
		기존 환경
			인프라 요구 사항 추측
			대규모로 테스트할 여유 없음
			변화에 대한 두려움
			실험의 타당성 제시 불가
			아키텍처가 시간이 지나도 진척될 가능성 보이지 않음
		클라우드 환경
			필요 용량에 대한 추측 불필요
			프로덕션 규모로 테스트	
			보다 간편한 실험
			아키텍처 진화 허용
			데이터 기반 아키텍처 구축
			게임 데이를 통해 개선

	원칙
		운영 우수성 / 보안 / 안정성 / 성능 효율성 / 비용 최적화

		운영 우수성
			비즈니스 가치를 제공하고 지원 프로세스 및 절차를 지속적으로 개선하기 위해 시스템 실행 및 모니터링
			조직 / 준비 / 운영 / 진화
		보안
			위험 평가 및 완화 전략을 통해 정보, 시스템 및 자산을 보호하는 동시에 비즈니스 가치 제공
			자격 증명 및 엑세스 관리 / 탐지 / 인프라 보호 / 데이터 보호 / 인시던트 대응
		안정성
			장애로부터 복구하고 요구를 충족할 수 있는 기능에 중점
			기본 요소 / 워크로드 아키텍처 / 변경 관리 / 장애 관리
		성능 효율성
			컴퓨팅 리소스를 효율적으로 사용하여 시스템 요구 사항을 충족하고 수요가 변하고 기술이 진화함에 따라 효율성 유지
			선택 / 검토 / 모니터링 / 절충
		비용 최적화 원칙
			가장 낮은 가격으로 비즈니스 성과를 달성하는 능력
			클라우드 재무 관리 / 지출 및 사용 인식 / 비용 효율적인 리소스
			수요 및 공급 리소스 관리
			시간을 두고 최적화
	일반적 용도
		클라우드 네이티브 아키텍처를 구축하는 방법에 대해 알아봄
		백로그 작성
		출시 전 통과 의례로 사용
		서로 다른 팀의 성숙도 비교
		기업 인수를 위한 실사를 수행

	클라우드 아키텍처에 대해 정보에 근거한 의사 결정을 하고 의사 결정이 미치는 잠재적 영향 파악
	설계 원칙을 활용하여 클라우드 네이티브 아키텍처의 구성 파악
	